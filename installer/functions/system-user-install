# Initiate system user install

install_as_system_user() {
  [[ $(id -u $LT_USER) ]] || fatal "The user \"$LT_USER\" does not exist."

  if [[ $(id -u) -ne 0 ]]; then
    info "Switching to user \"$LT_USER\"."
  fi

  export -f system_user_install
  su $LT_USER --shell /bin/bash -c "system_user_install"
}


# Functions to be used as the system user

system_user_install() {
  for file in ./functions/*; do
    source $file
  done

  safety on
  install_bundler
  clone_repos

  skip_decision "Do you want to create a new db?"             && setup_db
  skip_decision "Do you want to install the ruby backend?"    && setup_backend
  skip_decision "Do you want to install the ramaze frontend?" && setup_frontend
  skip_decision "Do you want to generate an invitation code to create a Libertree account?" && generate_invite
}

clone_repos() {
  info "Cloning repositories..."

  URL="git://github.com/Libertree"

  mkdir -p ~/git
  cd ~/git
  for repo in libertree-db \
              libertree-backend-rb \
              libertree-frontend-ramaze; do
    if [[ ! -d $repo ]]; then
      git clone "$URL/$repo.git"
    else
      cd "$repo"
      git pull origin
      cd -
    fi
  done
}


setup_db() {
  # abort if db server is not running
  if ! pgrep postgres >/dev/null; then
    fatal "The PostgreSQL server is not running. Please start it manually."
  fi

  cd ~/git/libertree-db

  export PGHOST=localhost
  info "Creating db owner and database as user \"postgres\"."
  ./createuser.sh
  ./createdb.sh

  handle_config "database.yaml"

  info "Applying database migrations"
  LIBERTREE_ENV=production ./migrate.sh
}

generate_invite() {
  code=$(echo 'INSERT INTO invitations DEFAULT VALUES RETURNING code;' | psql --tuples-only --no-align --quiet -U libertree libertree_production)
  say "Your invitation code:"
  say "    $code"
  say "You will need this code to create a new Libertree account."
}

setup_backend() {
  cd ~/git/libertree-backend-rb

  info "Installing dependent gems"
  $BUNDLE_BIN install --without development --path vendor

  [[ ! -e public.key ]] && [[ ! -e private.key ]] && $BUNDLE_BIN exec ruby generate-key-pair.rb
  handle_config "config.yaml"

  # TODO: offer to use the same db config as for libertree-db
  handle_config "database.yaml"
}

setup_frontend() {
  cd ~/git/libertree-frontend-ramaze

  info "Installing dependent gems"
  $BUNDLE_BIN install --without development --path vendor
  ./css-build.sh

  cd config

  # TODO: offer to use the same db config as for libertree-db
  handle_config "database.yaml"
  handle_config "application.yaml"
  mkdir -p public/images/avatars
}

install_bundler() {
  gem list --local --installed bundler || (info "Installing bundler"; gem install bundler --user-install)
  export BUNDLE_BIN=`find ~/.gem -executable -name "bundle" | head -n1`
}