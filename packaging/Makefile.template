# TODO:
#   - add architecture ("-a all" or "-a native")
#   - create libertree user

PREFIX = /opt/libertree
PREFIX_FRONTEND = $(addprefix $(PREFIX)/,frontend-ramaze)
PREFIX_BACKEND = $(addprefix $(PREFIX)/,backend-rb)
PREFIX_DB = $(addprefix $(PREFIX)/,db)
PREFIX_GEMS = $(addprefix $(PREFIX)/,gems)
PKG_PREFIX = libertree

VERSION_FRONTEND = 0.0.4
VERSION_BACKEND = 0.0.3
VERSION_MODEL   := $(shell grep -oP "version += +'\K([^']+)" ../libertree-model-rb/libertree-model.gemspec)
VERSION_CLIENT  := $(shell grep -oP "version += +'\K([^']+)" ../libertree-client-rb/libertree-client.gemspec)
VERSION_DB      = 0.0.1

FRONTEND_DESC = "Libertree web frontend"
BACKEND_DESC = "Libertree backend server"
DB_DESC = "Libertree database migrations"

GEMDIR = vendor/cache
PKG_TYPE := $(shell if [ -f /usr/bin/rpm ]; then echo rpm; else echo deb; fi)

# Create a deb/rpm package from an unpacked ruby gem.
# $(1) : dir name
# $(2) : plain name
# $(3) : version
# $(4) : optional deb/rpm dependencies for the built package
WRAPGEMDIR = fpm -f -d ruby $(4) \
		--prefix $(PREFIX_GEMS) \
		--version $(3) \
		--deb-user libertree \
		--deb-group libertree \
		--rpm-user libertree \
		--rpm-group libertree \
		-s dir -t $(PKG_TYPE) -n $(addprefix $(PKG_PREFIX)-,$(2)) $(addprefix $(GEMDIR)/,$(1))

# Convert a ruby gem to a deb/rpm package
# The name of the resulting package will be prefixed with "libertree-" (PKG_PREFIX)
# $(1) : the directory containing the source gem
# $(2) : additional parameters to fpm (e.g. package name, version, etc)
MKPACKAGE = fpm -f -d ruby $(2) \
		--prefix $(PREFIX_GEMS) --gem-package-name-prefix $(PKG_PREFIX) \
		--directories . \
		--gem-bin-path $(addprefix $(PREFIX_GEMS)/,bin) \
		--deb-user libertree \
		--deb-group libertree \
		--rpm-user libertree \
		--rpm-group libertree \
		-s gem -t $(PKG_TYPE) $(addprefix $(GEMDIR)/,$(1))

# Build a deb/rpm package from a libertree gem
# Dependencies are set according to the gemspec file.
# $(1) : gem file name
# $(2) : version
# $(3) : path of generated package
# $(4) : package name
# $(5) : additional parameters to fpm
BUILDPKG = fpm -f -d ruby $(5) \
		--prefix $(PREFIX_GEMS) \
		--gem-package-name-prefix $(PKG_PREFIX) \
		--no-gem-fix-name \
		--gem-fix-dependencies \
		--maintainer "rekado+libertree@elephly.net" \
		--version $(2) \
		--license AGPL3 \
		--directories . \
		--gem-bin-path $(addprefix $(PREFIX_GEMS)/,bin) \
		--deb-user libertree \
		--deb-group libertree \
		--rpm-user libertree \
		--rpm-group libertree \
		-p $(3) \
		-n $(4) \
		-s gem -t $(PKG_TYPE) $(addprefix ./,$(1))


#############
# RULES
#############
all: libertree-frontend-$(VERSION_FRONTEND).$(PKG_TYPE) libertree-backend-$(VERSION_BACKEND).$(PKG_TYPE)

# TODO: remove backend gems from prerequisites
# TODO: what about empty paths like public/avatars, log/, pids/?
libertree-frontend-$(VERSION_FRONTEND).$(PKG_TYPE) : gems \
	libertree-model-$(VERSION_MODEL).$(PKG_TYPE)
	fpm -f -d ruby \
		-d libertree-model \
		-d libertree-ramaze \
		-d libertree-innate \
		-d libertree-dalli \
		-d libertree-mini_magick \
		-d libertree-sass \
		-d libertree-ruby-oembed \
		-d libertree-fast_gettext \
		-d libertree-json \
		-d libertree-bcrypt-ruby \
		-d libertree-nokogiri \
		-d libertree-unicorn \
		-d libertree-curb \
		-d libertree-ruby-filemagic \
		-d libertree-gpgme \
		--prefix $(PREFIX_FRONTEND) \
		--url "http://libertreeproject.org" \
		--maintainer "rekado+libertree@elephly.net" \
		--description $(FRONTEND_DESC) \
		--version $(VERSION_FRONTEND) \
		--license AGPL3 \
		--deb-user libertree \
		--deb-group libertree \
		--rpm-user libertree \
		--rpm-group libertree \
		-p $@ \
		-C ../libertree-frontend-ramaze \
		--directories . \
		-s dir -t $(PKG_TYPE) -n libertree-frontend \
		app.rb \
		config/ \
		config.ru \
		contrib/ \
		controller/ \
		gnu-agpl-3.txt \
		helper/ \
		layout/ \
		lib/ \
		LICENCE \
		locale/ \
		public/ \
		README.md \
		spec/ \
		service.sh \
		view/

# TODO: share database config file?
# TODO: if config files are included fpm fails
# TODO: can we build dependencies from Gemfile?
# TODO: exclude frontend gems from prerequisites
libertree-backend-$(VERSION_BACKEND).$(PKG_TYPE) : gems \
	libertree-client-$(VERSION_CLIENT).$(PKG_TYPE) \
	libertree-model-$(VERSION_MODEL).$(PKG_TYPE)
	fpm -f -d ruby \
		-d libertree-model \
		-d libertree-client \
		-d libertree-json \
		-d libertree-mail \
		-d libertree-mail-gpg \
		-d libertree-em-websocket \
		-d libertree-blather \
		-d libertree-bcrypt-ruby \
		--prefix $(PREFIX_BACKEND) \
		--url "http://libertreeproject.org" \
		--maintainer "rekado+libertree@elephly.net" \
		--description $(BACKEND_DESC) \
		--version $(VERSION_BACKEND) \
		--license AGPL3 \
		--deb-user libertree \
		--deb-group libertree \
		--rpm-user libertree \
		--rpm-group libertree \
		-p $@ \
		-C ../libertree-backend-rb \
		--directories . \
		-s dir -t $(PKG_TYPE) -n libertree-backend \
		lib/ bin/server.rb bin/job-processor.rb generate-key-pair.sh \
		service.sh \
		database.yaml.example \
		defaults.yaml

#		--config-files database.yaml.example \
#		--config-files config.yaml.example \

ifeq ($(PKG_TYPE), rpm)
POSTGRES_DEPS := -d postgresql-server -d postgresql
else
POSTGRES_DEPS := -d postgresql -d postgresql-client
endif
libertree-db-$(VERSION_DB).$(PKG_TYPE) :
	fpm -f $(POSTGRES_DEPS) --prefix $(PREFIX_DB) \
		--url "http://libertreeproject.org" \
		--maintainer "rekado+libertree@elephly.net" \
		--description $(DB_DESC) \
		--version $(VERSION_DB) \
		--license AGPL3 \
		--deb-user libertree \
		--deb-group libertree \
		--rpm-user libertree \
		--rpm-group libertree \
		-p $@ \
		-C ../libertree-db \
		--directories . \
		-s dir -t $(PKG_TYPE) \
		-n libertree-db \
		migrations/ \
		functions/ \
		LICENCE \
		LICENSE \
		README.md \
		createdb.sh \
		createuser.sh \
		database.yaml.example \
		gnu-agpl-3.txt \
		migrate.sh


PLACEHOLDER_FOR_GEM_DEPENDENCIES
	touch gems

libertree-client-$(VERSION_CLIENT).gem : ../libertree-client-rb/libertree-client.gemspec
	cd ../libertree-client-rb/; gem build libertree-client.gemspec; cd -; mv ../libertree-client-rb/$@ .

libertree-client-$(VERSION_CLIENT).$(PKG_TYPE) : libertree-client-$(VERSION_CLIENT).gem
	$(call BUILDPKG, $<, $(VERSION_CLIENT), $@, libertree-client)

# TODO: specify database.yaml.example as config file
# TODO: share database.yaml with other packages?
libertree-model-$(VERSION_MODEL).gem : ../libertree-model-rb/libertree-model.gemspec
	cd ../libertree-model-rb/; gem build libertree-model.gemspec; cd -; mv ../libertree-model-rb/$@ .

libertree-model-$(VERSION_MODEL).$(PKG_TYPE) : libertree-model-$(VERSION_MODEL).gem libertree-db-$(VERSION_DB).$(PKG_TYPE)
	$(call BUILDPKG, $<, $(VERSION_MODEL), $@, libertree-model, -d libertree-db)


####################################
# DEPENDENT GEMS WITH EXTENSIONS
####################################

# needs OpenSSL library
$(PKG_PREFIX)-eventmachine-%.$(PKG_TYPE) : $(GEMDIR)/eventmachine-%.gem
ifeq ($(PKG_TYPE), rpm)
	$(call MKPACKAGE, eventmachine-$*.gem, -p $@ -d openssl-libs)
else
	$(call MKPACKAGE, eventmachine-$*.gem, -p $@ -d libssl1.0.0)
endif

# needs libxml2 libxslt
$(PKG_PREFIX)-nokogiri-%.$(PKG_TYPE) : $(GEMDIR)/nokogiri-%.gem
ifeq ($(PKG_TYPE), rpm)
	$(call MKPACKAGE, nokogiri-$*.gem, -p $@ -d libxml2 -d libxslt)
else
	$(call MKPACKAGE, nokogiri-$*.gem, -p $@ -d libxml2 -d libxslt1.1)
endif

# needs gpgme
# needs mini_portile gem to be installed at build time
$(PKG_PREFIX)-gpgme-%.$(PKG_TYPE) : $(GEMDIR)/gpgme-%.gem
ifeq ($(PKG_TYPE), rpm)
	$(call MKPACKAGE, gpgme-$*.gem, -p $@ -d gpgme)
else
	$(call MKPACKAGE, gpgme-$*.gem, -p $@ -d libgpgme11)
endif

# TODO: does this depend on a system library?
$(PKG_PREFIX)-bcrypt-ruby-%.$(PKG_TYPE) : $(GEMDIR)/bcrypt-ruby-%.gem
	$(call MKPACKAGE, bcrypt-ruby-3.0.1.gem, -p $@)

$(PKG_PREFIX)-pg-%.$(PKG_TYPE) : $(GEMDIR)/pg-%.gem
ifeq ($(PKG_TYPE), rpm)
	$(call MKPACKAGE, pg-$*.gem, -p $@ -d postgresql-libs)
else
	$(call MKPACKAGE, pg-$*.gem, -p $@ -d libpq5)
endif

# curb depends on libcurl-dev (Debian) / libcurl-devel (Fedora)
$(PKG_PREFIX)-curb-%.$(PKG_TYPE) : $(GEMDIR)/curb-%.gem
ifeq ($(PKG_TYPE), rpm)
	$(call MKPACKAGE, curb-$*.gem, -p $@ -d libcurl)
else
	$(call MKPACKAGE, curb-$*.gem, -p $@ -d libcurl3)
endif

# ruby-filemagic depends on libmagic-dev (Debian) / file-devel (Fedora)
$(PKG_PREFIX)-ruby-filemagic-%.$(PKG_TYPE) : $(GEMDIR)/ruby-filemagic-%.gem
ifeq ($(PKG_TYPE), rpm)
	$(call MKPACKAGE, ruby-filemagic-$*.gem, -p $@ -d file)
else
	$(call MKPACKAGE, ruby-filemagic-$*.gem, -p $@ -d libmagic1)
endif


# standard rule for gems that are converted to rpm/deb
$(PKG_PREFIX)-%.$(PKG_TYPE) : $(GEMDIR)/%.gem
	$(call MKPACKAGE, $*.gem, -p $@)

clean :
	rm -rf ./packages/
	rm -rf *.$(PKG_TYPE)

cleanall : clean
	rm -rf gems
	rm -rf Makefile
	rm -rf $(GEMDIR)
	rm -rf libertree-client-*.gem
	rm -rf libertree-model-*.gem

nuke : cleanall
	rm -rf vendor

rebuild: cleanall libertree-backend-$(VERSION_BACKEND).$(PKG_TYPE)

.PHONY: clean cleanall nuke rebuild
