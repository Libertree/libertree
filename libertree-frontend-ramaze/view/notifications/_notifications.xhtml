<?r
@set_keys.each do |key|
  notifications = @sets[key]
  notif = notifications[0]
  actor_array = notifications.map { |n| n.subject.member.name_display }
  actors = anded_list( actor_array.uniq )
  sg_or_pl = actor_array.uniq.length == 1 ? "singular" : "plural"

  case notif.subject
  when Libertree::Model::Comment
    ?>#{ render_partial '_comment', notifications: notifications, comment: notif.subject, actors: actors, sg_or_pl: sg_or_pl }<?r
  when Libertree::Model::CommentLike
    ?>#{ render_partial '_comment_like', notifications: notifications, like: notif.subject, actors: actors, sg_or_pl: sg_or_pl }<?r
  when Libertree::Model::Message
    ?>#{ render_partial '_message', notifications: notifications, message: notif.subject, actors: actors, sg_or_pl: sg_or_pl }<?r
  when Libertree::Model::PoolPost
    ?>#{ render_partial '_pool_post', notifications: notifications, pool_post: notif.subject, actors: actors, sg_or_pl: sg_or_pl }<?r
  when Libertree::Model::PostLike
    ?>#{ render_partial '_post_like', notifications: notifications, like: notif.subject, actors: actors, sg_or_pl: sg_or_pl }<?r
  when Libertree::Model::Post
    ?>#{ render_partial '_mention', notifications: notifications, post: notif.subject, actors: actors, sg_or_pl: sg_or_pl }<?r
  end
end
?>
